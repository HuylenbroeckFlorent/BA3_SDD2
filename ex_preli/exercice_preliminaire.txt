Algorithm belongsToScene :
  Input : BSP, a  binary space partition descripting the scene.
          A, a point denoted by (x, y).
          B, a point denoted by (x, y).
  Output : Boolean wheter if the segment AB belongs to the scene.
  Effects : None.

belongsToScene(BSP,A,B)
  si A.x-B.x==0
    d <- +inf
  sinon
    d <- (A.y-B.y)/(A.x-B.x)
  appartient <- rechercher(BSP, A, B, d)
  retourner appartient
  
rechercher(BSP, P, B, d)
  S[] <- localiser(BSP,P)
  réduire S[] selon d           #réduit a 1 ou 0 set (P,P')
  si S vide
        retourner False
  sinon      
        si P' (pas sur un bord)
           si P' =/= B
              retourner False
           sinon 
              retourner True
        sinon retourner rechercher(BSP, P', B, d)

localiser(BSP,P(xp,yp), return[] )
  si BSP est feuille
        si (xp, yp) appartient au data de BSP
            ajouter BSP au return[]
  sinon
        switch résultat de l'eq de BSP avec (xp, yp)
        cas >0
            localiser(BSP+, P(xp,yp), return[])
        cas <0 
            localiser(BSP-, P(xp,yp), return[])
        cas =0 
            si (xp, yp) apaprtient au data de BSP
                ajouter BSP au return[] 
            localiser(BSP+, P(xp,yp), return[])
            localiser(BSP-, P(xp,yp), return[])

reduire(S[], d)
  pour s appartient a S[]
    si coef=/=d
      on vire
    sinon
      on garde

